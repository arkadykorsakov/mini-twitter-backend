import { PrismaClient } from '@prisma/client';
import { hash } from 'argon2';

const prisma = new PrismaClient();

async function main() {
  const [pass1, pass2, pass3] = await Promise.all([
    hash('hashed_password_1'),
    hash('hashed_password_2'),
    hash('hashed_password_3'),
  ]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–æ–∑–¥–∞–µ–º –∏—Ö –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
  const usersData = [
    {
      email: 'ivan.petrov@example.com',
      passwordHash: pass1,
      name: '–ò–≤–∞–Ω',
      surname: '–ü–µ—Ç—Ä–æ–≤',
      nickname: 'ivanpetrov',
      description: '–õ—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏',
      isArchive: false,
      avatarId: null,
    },
    {
      email: 'anna.smirnova@example.com',
      passwordHash: pass2,
      name: '–ê–Ω–Ω–∞',
      surname: '–°–º–∏—Ä–Ω–æ–≤–∞',
      nickname: 'annasm',
      description: '–§–æ—Ç–æ–≥—Ä–∞—Ñ –∏ –±–ª–æ–≥–µ—Ä',
      isArchive: false,
      avatarId: null,
    },
    {
      email: 'alex.ivanov@example.com',
      passwordHash: pass3,
      name: '–ê–ª–µ–∫—Å–µ–π',
      surname: '–ò–≤–∞–Ω–æ–≤',
      nickname: 'alexivanov',
      description: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ –∏ –ø–∏—Å–∞—Ç–µ–ª—å',
      isArchive: false,
      avatarId: null,
    },
  ];

  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
  for (const userData of usersData) {
    const existingUser = await prisma.user.findUnique({
      where: { email: userData.email },
    });

    if (!existingUser) {
      await prisma.user.create({
        data: userData,
      });
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —Å–æ–∑–¥–∞–Ω`);
    } else {
      console.log(`‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫–∞–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö, —Ç–∞–∫ –∏ –Ω–æ–≤—ã—Ö)
  const users = await prisma.user.findMany();
  const ivan = users.find((u) => u.email === 'ivan.petrov@example.com');
  const anna = users.find((u) => u.email === 'anna.smirnova@example.com');
  const alex = users.find((u) => u.email === 'alex.ivanov@example.com');

  if (!ivan || !anna || !alex) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  }

  // –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å—Ç—ã —Ü–µ–ª–µ–≤—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è —á—É–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  await prisma.post.deleteMany({
    where: {
      authorId: { in: [ivan.id, anna.id, alex.id] },
    },
  });

  // –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã
  const postsData = [
    // –ü–æ—Å—Ç—ã –ò–≤–∞–Ω–∞ (–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ)
    {
      authorId: ivan.id,
      title: '–ú–æ–π –ø–µ—Ä–≤—ã–π –æ–ø—ã—Ç —Å TypeScript',
      body: '–°–µ–≥–æ–¥–Ω—è —è –Ω–∞—á–∞–ª –∏–∑—É—á–∞—Ç—å TypeScript –∏ —Ö–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏. TypeScript –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –º–Ω–æ–≥–∏—Ö –æ—à–∏–±–æ–∫ –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...',
      imageId: null,
      createTime: new Date('2024-01-15T10:00:00Z'),
      updateTime: new Date('2024-01-15T10:00:00Z'),
    },
    {
      authorId: ivan.id,
      title: '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ React —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      body: '–ó–∞ –≥–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å React —è —Å–æ–±—Ä–∞–ª –∫–æ–ª–ª–µ–∫—Ü–∏—é –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –ø–∏—Å–∞—Ç—å –±–æ–ª–µ–µ —á–∏—Å—Ç—ã–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –∫–æ–¥...',
      imageId: null,
      createTime: new Date('2024-01-20T14:30:00Z'),
      updateTime: new Date('2024-01-20T14:30:00Z'),
    },
    {
      authorId: ivan.id,
      title: '–ö–∞–∫ —è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
      body: '–í —ç—Ç–æ–º –ø–æ—Å—Ç–µ —è —Ä–∞—Å—Å–∫–∞–∂—É –æ –º–µ—Ç–æ–¥–∞—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ –º–Ω–µ —É—Å–∫–æ—Ä–∏—Ç—å –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ 40%...',
      imageId: null,
      createTime: new Date('2024-01-25T16:45:00Z'),
      updateTime: new Date('2024-01-25T16:45:00Z'),
    },

    // –ü–æ—Å—Ç—ã –ê–Ω–Ω—ã (—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è)
    {
      authorId: anna.id,
      title: '–°–µ–∫—Ä–µ—Ç—ã –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
      body: '–ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è - —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ capturing –¥—É—à–∏ —á–µ–ª–æ–≤–µ–∫–∞. –í —ç—Ç–æ–º –ø–æ—Å—Ç–µ —è –ø–æ–¥–µ–ª—é—Å—å —Å–≤–æ–∏–º–∏ —Å–µ–∫—Ä–µ—Ç–∞–º–∏ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤...',
      imageId: null,
      createTime: new Date('2024-01-16T11:20:00Z'),
      updateTime: new Date('2024-01-16T11:20:00Z'),
    },
    {
      authorId: anna.id,
      title: '–õ—É—á—à–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è —Å—ä–µ–º–∫–∏ –≤ –ú–æ—Å–∫–≤–µ',
      body: '–ú–æ—Å–∫–≤–∞ –ø–æ–ª–Ω–∞ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–π. –í–æ—Ç –º–æ–∏ –ª—é–±–∏–º—ã–µ –ª–æ–∫–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–π–¥—É—Ç –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∏–ª–µ–π —Å—ä–µ–º–∫–∏...',
      imageId: null,
      createTime: new Date('2024-01-22T09:15:00Z'),
      updateTime: new Date('2024-01-22T09:15:00Z'),
    },
    {
      authorId: anna.id,
      title: '–û–±–∑–æ—Ä –Ω–æ–≤–æ–π –∫–∞–º–µ—Ä—ã Sony A7IV',
      body: '–ù–µ–¥–∞–≤–Ω–æ —è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∞ –Ω–æ–≤—É—é –∫–∞–º–µ—Ä—É Sony A7IV –∏ –≥–æ—Ç–æ–≤–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏. –û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞...',
      imageId: null,
      createTime: new Date('2024-01-28T13:40:00Z'),
      updateTime: new Date('2024-01-28T13:40:00Z'),
    },

    // –ü–æ—Å—Ç—ã –ê–ª–µ–∫—Å–µ—è (–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è)
    {
      authorId: alex.id,
      title: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –ö–∞–º—á–∞—Ç–∫–µ: –≤—É–ª–∫–∞–Ω—ã –∏ –≥–µ–π–∑–µ—Ä—ã',
      body: '–ö–∞–º—á–∞—Ç–∫–∞ - —ç—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫—Ä–∞–π –≤—É–ª–∫–∞–Ω–æ–≤, –≥–µ–π–∑–µ—Ä–æ–≤ –∏ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã. –í —ç—Ç–æ–º –ø–æ—Å—Ç–µ —è —Ä–∞—Å—Å–∫–∞–∂—É –æ —Å–≤–æ–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏...',
      imageId: null,
      createTime: new Date('2024-01-18T08:00:00Z'),
      updateTime: new Date('2024-01-18T08:00:00Z'),
    },
    {
      authorId: alex.id,
      title: '–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ø–æ—Ö–æ–¥—É –≤ –≥–æ—Ä—ã',
      body: '–ì–æ—Ä–Ω—ã–µ –ø–æ—Ö–æ–¥—ã —Ç—Ä–µ–±—É—é—Ç —Ç—â–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –î–µ–ª—é—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º –∏ checklist–æ–º —Ç–æ–≥–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π...',
      imageId: null,
      createTime: new Date('2024-01-23T15:20:00Z'),
      updateTime: new Date('2024-01-23T15:20:00Z'),
    },
    {
      authorId: alex.id,
      title: '–°–∞–º—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ –º–µ—Å—Ç–∞ –ê–ª—Ç–∞—è',
      body: '–ê–ª—Ç–∞–π –ø–æ—Ä–∞–∂–∞–µ—Ç —Å–≤–æ–µ–π –ø—Ä–∏—Ä–æ–¥–Ω–æ–π –∫—Ä–∞—Å–æ—Ç–æ–π. –û–∑–µ—Ä–∞, –≥–æ—Ä—ã, –≤–æ–¥–æ–ø–∞–¥—ã - –∑–¥–µ—Å—å –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ—Ç —á—Ç–æ-—Ç–æ —Å–≤–æ–µ...',
      imageId: null,
      createTime: new Date('2024-01-30T12:10:00Z'),
      updateTime: new Date('2024-01-30T12:10:00Z'),
    },
  ];

  await prisma.post.createMany({
    data: postsData,
  });

  console.log('‚úÖ –ü–æ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
  console.log(`üìù –°–æ–∑–¥–∞–Ω–æ ${postsData.length} –ø–æ—Å—Ç–æ–≤`);
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
    await prisma.$disconnect();
    process.exit(1);
  });
